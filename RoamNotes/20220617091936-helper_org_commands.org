:PROPERTIES:
:ID:       23ead239-5518-4a8c-b644-f380a46358c9
:END:
#+title: [Helper] Org-commands
#+date: [2022-06-17 sex 09:19]

* Timestamps
[2022-06-17 sex]
  
 Timestamp is a specification of a date (possibly with a time or a range of
 times) in a special format.

** Built-in commands

- [[https://orgmode.org/org.html#Creating-Timestamps][Org docs]].

**** Creating Timestamps

+ C-c . (~org-time-stamp~)

Prompt for a date and insert a corresponding timestamp. When point is at an
existing timestamp in the buffer, the command is used to modify this timestamp
instead of inserting a new one. When this command is used twice in succession, a
time range is inserted.

When called with a prefix argument, use the alternative format which contains
date and time. The default time can be rounded to multiples of 5 minutes. See
the option org-time-stamp-rounding-minutes.

With two prefix arguments, insert an active timestamp with the current time
without prompting.

+ C-c ! (~org-time-stamp-inactive~)

Like C-c ., but insert an inactive timestamp that does not cause an agenda
entry.

+ C-c C-c

Normalize timestamp, insert or fix day name if missing or wrong.

+ C-c < (~org-date-from-calendar~)

Insert a timestamp corresponding to point date in the calendar.

+ C-c > (~org-goto-calendar~)

Access the Emacs calendar for the current date. If there is a timestamp in the
current line, go to the corresponding date instead.

+ C-c C-o (~org-open-at-point~)

Access the agenda for the date given by the timestamp or -range at point (see
Weekly/daily agenda).

+ S-LEFT (~org-timestamp-down-day~)
+ S-RIGHT (~org-timestamp-up-day~)

Change date at point by one day. These key bindings conflict with
shift-selection and related modes (see Conflicts).

+ S-UP (~org-timestamp-up~)
+ S-DOWN (~org-timestamp-down~)

On the beginning or enclosing bracket of a timestamp, change its type. Within a
timestamp, change the item under point. Point can be on a year, month, day, hour
or minute. When the timestamp contains a time range like ‘15:30-16:30’,
modifying the first time also shifts the second, shifting the time block with
constant length. To change the length, modify the second time. Note that if
point is in a headline and not at a timestamp, these same keys modify the
priority of an item (see Priorities). The key bindings also conflict with
shift-selection and related modes (see Conflicts).

+ C-c C-y (~org-evaluate-time-range~)

Evaluate a time range by computing the difference between start and end. With a
prefix argument, insert result after the time range (in a table: into the
following column).

**** Inserting Deadlines Or Schedules

+ C-c C-d (~org-deadline~)

Insert ‘DEADLINE’ keyword along with a stamp. The insertion happens in the line
directly following the headline. Remove any ‘CLOSED’ timestamp . When called
with a prefix argument, also remove any existing deadline from the
entry. Depending on the variable org-log-redeadline, take a note when changing
an existing deadline.

+ C-c C-s (~org-schedule~)

Insert ‘SCHEDULED’ keyword along with a stamp. The insertion happens in the line
directly following the headline. Remove any ‘CLOSED’ timestamp. When called with
a prefix argument, also remove the scheduling date from the entry. Depending on
the variable org-log-reschedule, take a note when changing an existing
scheduling time.

+ C-c / d (~org-check-deadlines~)
  
Create a sparse tree with all deadlines that are either past-due, or which will
become due within org-deadline-warning-days. With C-u prefix, show all deadlines
in the file. With a numeric prefix, check that many days. For example, C-1 C-c /
d shows all deadlines due tomorrow.

+ C-c / b (~org-check-before-date~)

Sparse tree for deadlines and scheduled items before a given date.

+ C-c / a (~org-check-after-date~)

Sparse tree for deadlines and scheduled items after a given date.

**** Clocking Work Time

+ C-c C-x C-i (~org-clock-in~)

Start the clock on the current item (clock-in). This inserts the ‘CLOCK’ keyword
together with a timestamp. If this is not the first clocking of this item, the
multiple ‘CLOCK’ lines are wrapped into a ‘LOGBOOK’ drawer (see also the
variable org-clock-into-drawer). You can also overrule the setting of this
variable for a subtree by setting a ‘CLOCK_INTO_DRAWER’ or ‘LOG_INTO_DRAWER’
property. When called with a C-u prefix argument, select the task from a list of
recently clocked tasks. With two C-u C-u prefixes, clock into the task at point
and mark it as the default task; the default task is always be available with
letter d when selecting a clocking task. With three C-u C-u C-u prefixes, force
continuous clocking by starting the clock when the last clock stopped.

While the clock is running, Org shows the current clocking time in the mode
line, along with the title of the task. The clock time shown is all time ever
clocked for this task and its children. If the task has an effort estimate (see
Effort Estimates), the mode line displays the current clocking time against
it74. If the task is a repeating one (see Repeated tasks), show only the time
since the last reset of the task. You can exercise more control over show time
with the ‘CLOCK_MODELINE_TOTAL’ property. It may have the values ‘current’ to
show only the current clocking instance, ‘today’ to show all time clocked on
this tasks today—see also the variable org-extend-today-until, all to include
all time, or auto which is the default. Clicking with mouse-1 onto the mode line
entry pops up a menu with clocking options.

+ C-c C-x C-o (~org-clock-out~)

Stop the clock (clock-out). This inserts another timestamp at the same location
where the clock was last started. It also directly computes the resulting time
in inserts it after the time range as ‘=>HH:MM’. See the variable
org-log-note-clock-out for the possibility to record an additional note together
with the clock-out timestamp.

+ C-c C-x C-x (~org-clock-in-last~)

Re-clock the last clocked task. With one C-u prefix argument, select the task
from the clock history. With two C-u prefixes, force continuous clocking by
starting the clock when the last clock stopped.

+ C-c C-x C-e (~org-clock-modify-effort-estimate~)
  
Update the effort estimate for the current clock task.

+ C-c C-c or C-c C-y (~org-evaluate-time-range~)

Recompute the time interval after changing one of the timestamps. This is only
necessary if you edit the timestamps directly. If you change them with
S-<cursor> keys, the update is automatic.

+ C-S-UP (~org-clock-timestamps-up~)
+ C-S-DOWN (~org-clock-timestamps-down~)

On CLOCK log lines, increase/decrease both timestamps so that the clock duration
keeps the same value.

+ S-M-UP (~org-timestamp-up~)
+ S-M-DOWN (~org-timestamp-down~)

On ‘CLOCK’ log lines, increase/decrease the timestamp at point and the one of
the previous, or the next, clock timestamp by the same duration. For example, if
you hit S-M-UP to increase a clocked-out timestamp by five minutes, then the
clocked-in timestamp of the next clock is increased by five minutes.

+ C-c C-t (~org-todo~)

Changing the TODO state of an item to DONE automatically stops the clock if it
is running in this same item.

+ C-c C-x C-q (~org-clock-cancel~)

Cancel the current clock. This is useful if a clock was started by mistake, or
if you ended up working on something else.

+ C-c C-x C-j (~org-clock-goto~)

Jump to the headline of the currently clocked in task. With a C-u prefix
argument, select the target task from a list of recently clocked tasks.

+ C-c C-x C-d (~org-clock-display~)

Display time summaries for each subtree in the current buffer. This puts
overlays at the end of each headline, showing the total time recorded under that
heading, including the time of any subheadings. You can use visibility cycling
to study the tree, but the overlays disappear when you change the buffer (see
variable org-remove-highlights-with-change) or press C-c C-c.

The l key may be used in the agenda (see Weekly/daily agenda) to show which
tasks have been worked on or closed during a day.

Important: note that both org-clock-out and org-clock-in-last can have a global
keybinding and do not modify the window disposition.
